ДЗ 3

Пункт 1:
    Для сохранения состояния провайдятся вьюмодели, так как все работает на Flow сделал привязку к жизненному циклу
    Для инструментарных классов добавил допстринги, чтобы было легче понять для чего они используются
    Рефакторил код долго, по пункту в 200 строк в классе и 20 строк в функциях и вложенности уложился (Области видимости Kotlin не беру в расчет (наподобие with, apply...), они только чтобы не писать одну и ту же переменную по 5 раз))
    Много использовал lint, ktlint, sonarlint, попробовал deteKt
    Инкапсуляцию соблюдал

    Допбалл на твое усмотрение, если понравится реализация и поставишь его - будет классно

Пункт 2:
    Сделал все на Даггере, до этого пользовался Хилтом, земля и небо))
    Иерархию с Скоупами и Сабкомпонентами сделал
    Вьюмодели инжектил по ссылке из хабра из текста задания

    На допбалл сделал многомодульность, т.е. все зависимости не в одном модуле пробрасываются, а включают друг друга, также есть взаимодействие между ними

Пункт 3:
    Приложение спокойно работает без интернета, при его пояление происходит обновление списков. Для того, чтобы не стереть те записи, которые были созданы без интернета создал вторую таблицу с хронологией оффлайн операций. То есть если допустим юзер без интернета удалил какую то запись, то после подключения интернет-запись удалится.Также поддерживается множество операций, если пользователь много работал с одним объектом. Если оба элемента существуют, то сравнение идет по TimeStamp. Все краеугольные кейсы тоже покрыл))
    Использовал Room
    Вся магия по работе с данными происходит в репозитории

    Допбалл - можно записать полноценное слияние данных, поскольку, как я понял, у многих данные просто затираются при обновлении, здесь же более мягкая реализация с сохранением локальных изменений (но сервер в любом случае нужно считать источником правды)

    @Romka_Po напиши в ТГ, если есть какие то вопросы или пожелания